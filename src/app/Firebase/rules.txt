{
  "rules": {
    ".read": true,  // Allow public read access to all data
    "users": {
      "$uid": {
        ".read": "auth != null && (auth.uid === $uid || root.child('users/'+auth.uid+'/role').val() === 'staff')",
        ".write": "auth != null && (auth.uid === $uid || root.child('users/'+auth.uid+'/role').val() === 'staff')",
        ".validate": "newData.hasChildren(['email', 'name', 'role'])"
      }
    },
    "houses": {
      ".read": "auth != null",
      ".write": "
        auth != null && 
        (
          root.child('users/'+auth.uid+'/role').val() === 'staff' ||
          root.child('users').orderByChild('email').equalTo(auth.token.email).limitToFirst(1).val().role === 'staff'
        )
      ",
      "$houseId": {
        ".validate": "newData.hasChildren(['name', 'capacity', 'beds', 'baths'])"
      }
    },
    "amenities": {
      ".write": "auth != null && root.child('users').child(auth.uid).child('role').val() === 'staff'"
    },
    "reservations": {
      ".write": "auth != null",
      "$reservationId": {
        ".validate": "newData.hasChildren(['houseId', 'pax', 'dates'])"
      }
    },
    "houseAvailability": {
      ".write": "auth != null && root.child('users').child(auth.uid).child('role').val() === 'staff'"
    },
    "newsletterSubscribers": {
      ".read": "auth != null",
      ".write": "newData.exists() || data.exists()",
      ".indexOn": ["email"],
      "$subscriberId": {
        ".validate": "newData.hasChildren(['email', 'subscribedAt'])",
        "email": {
          ".validate": "newData.isString() && newData.val().matches(/^[^@]+@[^@]+\\.[^@]+$/)"
        },
        "subscribedAt": {
          ".validate": "newData.isNumber() && newData.val() <= now"
        }
      }
    },
    "messages": {
      ".read": "auth !== null && root.child('users').child(auth.uid).child('role').val() === 'staff'",
      ".write": "auth === null", // Allow public writes for contact form
      "$messageId": {
        ".write": "auth !== null && root.child('users').child(auth.uid).child('role').val() === 'staff'"
      }
    },
    "errorLogs": {
      ".read": "auth != null && root.child('users/'+auth.uid+'/role').val() === 'staff'",
      ".write": "auth != null",
      "$errorId": {
        ".validate": "newData.hasChildren(['timestamp', 'errorMessage', 'location'])",
        "timestamp": {
          ".validate": "newData.isNumber() && newData.val() <= now"
        },
        "errorMessage": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "userId": {
          ".validate": "newData.val() == null || newData.isString()"
        },
        "location": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "stackTrace": {
          ".validate": "newData.val() == null || newData.isString()"
        },
        "additionalData": {
          ".validate": "newData.val() == null || newData.isObject()"
        }
      }
    }
  }
}

